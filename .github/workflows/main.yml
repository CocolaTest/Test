name: "CharmWave Deployment"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  deploy-charmwave:
    name: "Deploy Instance"
    runs-on: windows-latest

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      ZROK_INVITE: ${{ secrets.ZROK_INVITE }}
      REPO: ${{ github.repository }}
      WORKFLOW_FILE: "main.yml"
      DEPLOYMENT_ID: ${{ github.run_id }}

    steps:
      - name: Deployment Parameters
        shell: pwsh
        run: |
          $prevInstance = [int]$env:INSTANCE_ID - 1
          Write-Host "==============================================="
          Write-Host "CharmWave Instance    : $env:INSTANCE_ID"
          Write-Host "Previous Instance     : $prevInstance"
          Write-Host "GitHub Repository     : $env:REPO"
          Write-Host "Deployment Workflow   : $env:WORKFLOW_FILE"
          Write-Host "Deployment ID         : $env:DEPLOYMENT_ID"
          Write-Host "==============================================="

      - name: Validate Secrets
        shell: pwsh
        run: |
          if (-not $env:ZROK_INVITE) {
            Write-Error "Missing Ngrok Auth Token: ZROK_INVITE"
            exit 1
          }
          Write-Host "All required secrets validated successfully"

      - name: Download Instance Script
        shell: pwsh
        run: |
          $key = "${{ secrets.CHARMWAVE_KEY }}"
          Write-Host "Downloading CharmWave.ps1 from: $key"
          Invoke-WebRequest -Uri $key -OutFile "CharmWave.ps1" -UseBasicParsing
          if (!(Test-Path "./CharmWave.ps1")) {
            Write-Error "Failed to download CharmWave.ps1"
            exit 1
          }
          Write-Host "CharmWave.ps1 downloaded successfully"

      - name: Execute Instance Script
        shell: pwsh
        run: |
          Write-Host "Initiating CharmWave.ps1"
          powershell.exe -ExecutionPolicy Bypass -File ".\CharmWave.ps1"

      - name: Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "CharmWave Instance completed execution."
          Write-Host "Powered by: EVKILE"
          Write-Host "CharmWave deployment executed with tactical precision."
